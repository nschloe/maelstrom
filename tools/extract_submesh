#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
'''
This tool helps working around DOLFIN's inability to deal with SubMesh() in
parallel. It does so by explicitly extracting a submesh and writing it out to
a separate XML file. That file can then be read be the main routine.
'''

import os

from dolfin import File, Mesh, MeshFunction, SubMesh


def _main():
    args = _parse_args()

    # Read the mesh.
    mesh = Mesh(args.infile)

    base, ext = os.path.splitext(args.infile)
    subdomainfile = base + '_physical_region' + ext

    # Read the corresponding physical regions file.
    subdomains = MeshFunction('size_t', mesh, subdomainfile)

    submesh_workpiece = SubMesh(mesh, subdomains, args.submesh_id)

    # Now write subdomains out to an XML file again
    outfile = File(args.outfile)
    outfile << submesh_workpiece
    return


def _parse_args():
    '''Parse input arguments.'''
    import argparse
    parser = argparse.ArgumentParser(description='Read and write a DOLFIN'
                                                 'mesh function.')
    parser.add_argument('infile',
                        help='Input mesh filename with subdomains',
                        type=str
                        )
    parser.add_argument('submesh_id',
                        help='Submesh to extract',
                        type=int
                        )
    parser.add_argument('outfile',
                        help='Output submesh file',
                        type=str
                        )
    return parser.parse_args()


if __name__ == '__main__':
    _main()
